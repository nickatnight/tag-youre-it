name: main

on:
  push:
    tags:
      - '*'
    branches:
      - master
  pull_request:
    branches:
      - master
      - develop

jobs:
  # build:
  #   uses: ./.github/workflows/build.yml

  mypy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/build.yml
      - name: MyPy
        run: poetry run mypy tag_youre_it/
  
  black:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/build.yml
      - name: Black
        run: poetry run black tag_youre_it --check
  
  flake:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/build.yml
      - name: Flake8
        run: oetry run flake8 tag_youre_it
  
      # - name: Checkout
      #   uses: actions/checkout@master
      # - name: Set up python/poetry
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.9
      # - name: Install Poetry
      #   run: |
      #     pip install -U pip
      #     pip install poetry
      #     poetry install
      #   env:
      #     POETRY_VIRTUALENVS_CREATE: true
      # - name: MyPy
      #   run: poetry run mypy tag_youre_it/
      # - name: Black
      #   run: poetry run black tag_youre_it --check
      # - name: Flake8
      #   run: poetry run flake8 tag_youre_it
      # - name: Coverage
      #   run: poetry run pytest --cov-report xml --cov=tag_youre_it tests/
      # - name: Codecov
      #   if: success()
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: ./coverage.xml
      #     flags: unittests

  create-release:
    needs: flake
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # need this for all history for all branches and tags
      - name: Create Release
        id: create_release
        uses: nickatnight/releases-action@v3
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      ReleaseTag: ${{ steps.create_release.outputs.release_tag }}
