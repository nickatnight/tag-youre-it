name: build

on: [workflow_call]  # allow this workflow to be called from other workflows

env:
  PYTHON_VERSION: 3.9
  POETRY_VERSION: 1.1.15

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-path: ${{github.workspace}}/.venv
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/.venv
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ env.PYTHON_VERSION }}-

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
  
      # - name: Checkout
      #   uses: actions/checkout@v3
      # - name: Set up python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ env.PYTHON_VERSION }}
      # - name: Set up poetry
      #   uses: abatilo/actions-poetry@v2
      #   with:
      #     poetry-version: ${{ env.POETRY_VERSION }}
